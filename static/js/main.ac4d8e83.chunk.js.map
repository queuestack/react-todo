{"version":3,"sources":["store/constants/task.js","store/actions/task.js","utils/_DATA.js","utils/api.js","store/actions/shared.js","comoponents/Task.js","utils/helpers.js","comoponents/TaskDetail.js","comoponents/AddTask.js","comoponents/Tasks.js","App.js","store/reducers/task.js","store/reducers/index.js","store/middleware/index.js","index.js"],"names":["TaskTypes","addTask","task","type","setTask","id","toggleTask","taskData","authedUser","tasks","title","body","undefined","dueDate","priority","done","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","Promise","all","res","rej","setTimeout","Object","objectSpread","then","_ref","slicedToArray","stop","this","handleInitalData","dispatch","_getInitialData","apply","arguments","getInitialData","receiveTaskData","TaskContainer","styled","div","_templateObject","props","css","_templateObject2","DoneTask","_templateObject3","TodoTask","_templateObject4","connect","index","react_default","createElement","onClick","className","style","margin","float","formatTask","formatTime","date","time","_date$split","split","_date$split2","year","month","day","_time$split3","_time$split4","hour","minute","Date","getTime","validateDate","regs","match","alert","_date$split3","_date$split4","validateTime","_time$split5","_time$split6","TaskDetailContainer","TaskDetail_templateObject","TaskTitleInput","input","TaskDetail_templateObject2","TaskBodyInput","TaskDetail_templateObject3","LabelText","TaskDetail_templateObject4","PrioritySelect","select","_templateObject5","DueDateInput","_templateObject6","TaskDetail","state","handleTitleChange","event","_this","setState","target","value","handleBodyChange","handleSetPriority","console","log","handleDateChange","handleTimeChange","handleSetTask","_this$props","_this$state","_props$task","_formatDate","timestamp","toLocaleTimeString","_date$toLocaleDateStr","toLocaleDateString","_date$toLocaleDateStr2","_time$split","_time$split2","second","formatDate","bodyState","dateState","timeState","setStateFromProps","nextProps","_this$state2","onChange","placeholder","maxLength","Component","TaskInput","AddTask_templateObject","AddTask","handleAddBtn","TodoContainer","Tasks_templateObject","TodoList","Tasks_templateObject2","clickedIndex","textAlign","map","i","comoponents_Task","key","comoponents_AddTask","comoponents_TaskDetail","App","comoponents_Tasks","initState","combineReducers","length","action","concat","toConsumableArray","filter","nextDone","toggledTask","restTasks","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ac4d8e83.chunk.js","sourcesContent":["export const TaskTypes = {\n    RECEIVE_TASK_DATA: 'RECEIVE_TASK_DATA',\n    ADD_TASK: 'ADD_TASK',\n    SET_TASK: 'SET_TASK',\n    REMOVE_TASK: 'REMOVE_TASK',\n    TOGGLE_TASK: 'TOGGLE_TASK',\n    CLICK_TASK: 'CLICK_TASK',\n    SET_TASK_PRIORITY: 'SET_TASK_PRIORITY',\n    SET_TASK_DUE_DATE: 'SET_TASK_DUE_DATE',\n}","import { TaskTypes } from '../constants'\n\nexport const receiveTaskData = (taskData) => {\n    return {\n        type: TaskTypes.RECEIVE_TASK_DATA,\n        taskData\n    }\n}\n\nexport const addTask = (task) => {\n    return {\n        type: TaskTypes.ADD_TASK,\n        task\n    }\n}\n\nexport const setTask = (task, id) => {\n    return {\n        type: TaskTypes.SET_TASK,\n        task,\n        id\n    }\n}\n\nexport const removeTask = (id) => {\n    return {\n        type: TaskTypes.REMOVE_TASK,\n        id\n    }\n}\n\nexport const toggleTask = (id) => {\n    return {\n        type: TaskTypes.TOGGLE_TASK,\n        id\n    }\n}\n\nexport const clickTask = (id) => {\n    return {\n        type: TaskTypes.CLICK_TASK,\n        id\n    }\n}\n\nexport const setTaskPriority = (id, priority) => {\n    return {\n        type: TaskTypes.SET_TASK_PRIORITY,\n        id,\n        priority\n    }\n}\n\nexport const setTaskDueDate = (id, date) => {\n    return {\n        type: TaskTypes.SET_TASK_DUE_DATE,\n        id,\n        date\n    }\n}","const taskData = {\n    authedUser: 'oxoxx',\n    tasks: [{\n        title: 'title1',\n        body: undefined,\n        dueDate: 1541150030181,\n        priority: 'high',\n        done: false\n    }, {\n        title: 'title2',\n        body: 'body2',\n        dueDate: undefined,\n        priority: 'normal',\n        done: false,\n    }, {\n        title: 'title3',\n        body: 'body3',\n        dueDate: 1551150040181,\n        priority: 'normal',\n        done: true,            \n    }]\n}\n\nexport function _getData () {\n    return new Promise((res, rej) => {\n        setTimeout(() => res({...taskData}), 1000)\n    })\n}","import { _getData } from './_DATA'\n\nexport async function getInitialData () {\n    return Promise.all([\n      _getData(),\n    ]).then(([taskData]) => ({\n      taskData\n    }))\n}","import { getInitialData } from '../../utils/api'\nimport { receiveTaskData } from './task'\n\nexport const handleInitalData = () => {\n    return (dispatch) => {\n        return getInitialData()\n            .then(({ taskData }) => {\n                dispatch(receiveTaskData(taskData))\n            })\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport styled, { css } from 'styled-components'\n\nimport { clickTask, toggleTask, removeTask } from '../store/actions'\n\nconst TaskContainer = styled.div`\n    border: 1px solid gray;\n    border-radius: 5px;\n    margin: 10px;\n    \n    ${props => props.priority === 'high' && css`\n        border-bottom: 5px solid red\n    `}\n`\nconst DoneTask = styled.div`\n    color: gray;\n    text-decoration: line-through;\n    padding: 10px;\n    font-size: 20px;\n`\nconst TodoTask = styled.div`\n    padding: 10px;\n    font-size: 20px;\n`\nconst Task = (props) => {\n    const { dispatch, index, task } = props\n    const { title, priority, done } = task\n\n    return (\n        <TaskContainer\n            priority={priority}\n            onClick={() => dispatch(clickTask(index))}\n        >\n            {done \n            ? \n            <DoneTask>\n                <i \n                    className=\"far fa-check-square\" \n                    style={{margin: '5px'}}\n                    onClick={() => dispatch(toggleTask(index))} \n                />\n                <span>\n                    {title}\n                </span>\n                <i \n                    className=\"far fa-trash-alt\" \n                    style={{margin: '5px', float: 'right'}}\n                    onClick={() => dispatch(removeTask(index))}\n                />\n            </DoneTask> \n            : \n            <TodoTask>\n                <i \n                    className=\"far fa-square\" \n                    style={{margin: '5px'}}\n                    onClick={() => dispatch(toggleTask(index))} \n                />\n                <span>\n                    {title}\n                </span>\n            </TodoTask>}                  \n        </TaskContainer>\n    )\n}\n\nconst mapStateToProps = ({ task }, props) => {\n    const { tasks } = task\n    const { index } = props\n\n    return {\n        task: tasks[index],\n        ...props\n    }\n}\n\nexport default connect(mapStateToProps)(Task)","export const formatTask = (title, body, dueDate, priority, done) => {\n    return {\n        title,\n        body,\n        dueDate,\n        priority,\n        done\n    }\n}\n\nexport const formatDate = (timestamp) => {\n    const date = new Date(timestamp)\n    const time = date.toLocaleTimeString('it-IT')\n    const [month, day, year] = date.toLocaleDateString().split('/')\n    const [hour, minute, second] = time.split(':')\n\n    return {\n        year,\n        month,\n        day,\n        hour,\n        minute,\n        second\n    }\n}\n\nexport const formatTime = (date, time) => {\n    const [ year, month, day ] = date.split('/')\n    const [ hour, minute ] = time.split(':')\n\n    const dueDate = new Date(year, month - 1, day, hour, minute).getTime()\n    \n    return dueDate\n}\n\nexport const validateDate = (date) => {\n    const dateRegex = /^\\d{4}[./]\\d{1,2}[./]\\d{1,2}$/\n    const regs = date.match(dateRegex)\n\n    if(date === '')\n        return false\n\n    if(regs) {\n        const [ year, month, day ] = date.split(/[./]/)\n\n        if(year < 1902 || year > 9999) {\n            alert(\"Invalid value for year: \" + year + \" - must be between 1902 and 9999\");\n            return false;\n        }\n\n        if(month < 1 || month > 12) {\n            alert(\"Invalid value for month: \" + month);\n            return false;\n        }\n\n        if(day < 1 || day > 31) {\n            alert(\"Invalid value for day: \" + day);\n            return false;\n        }\n    } else {\n        alert(\"Valid date format: yyyy/mm/dd\");\n        return false;\n    }   \n    \n    return true\n}\n\nexport const validateTime = (time) => {\n    const timeRegex = /^\\d{1,2}:\\d{2}([ap]m)?$/\n    const regs = time.match(timeRegex)\n\n    if(time === '')\n        return false\n        \n    if(regs) {\n        const [ hour, minute ] = time.split(/:/)\n\n        if(hour < 0 || hour > 23) {\n            alert(\"Invalid value for hour: \" + hour);\n            return false;\n        }\n\n        if(minute < 0 || minute > 59) {\n            alert(\"Invalid value for minute: \" + minute);\n            return false;\n        }\n    } else {\n        alert(\"Valid date format: hh:mm\");\n        return false;\n    }\n\n    return true\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { formatTask, formatDate, formatTime, validateDate, validateTime } from '../utils/helpers';\nimport { setTask } from '../store/actions';\n\nconst TaskDetailContainer = styled.div`\n    border: 1px solid black;\n    border-radius: 5px;\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n`\n\nconst TaskTitleInput = styled.input`\n    padding: 10px;\n    font-size: 20px;\n    margin: 10px;\n    border: 0px;\n`\n\nconst TaskBodyInput = styled.input`\n    padding: 10px;\n    font-size: 15px;\n    margin: 10px;\n    border: 1px solid gray;\n    width: 90%;\n`\nconst LabelText = styled.div`\n    margin-left: 10px;\n`\nconst PrioritySelect = styled.select`\n    padding: 10px;\n    font-size: 15px;\n    margin: 10px;\n    border: 1px solid gray;\n    width: 90%;\n`\n\nconst DueDateInput = styled.input`\n    padding: 5px;\n    font-size: 15px;\n    margin: 5px;\n`\n\nclass TaskDetail extends Component {\n    state = {\n        title: '',\n        body: '',\n        priority: '',\n        date: '',\n        time: '',\n    }\n    handleTitleChange = (event) => {\n        this.setState({\n            title: event.target.value\n        })\n    }\n    handleBodyChange = (event) => {\n        this.setState({\n            body: event.target.value\n        })\n    }\n    handleSetPriority = (event) => {\n        console.log(event.target.value)\n        this.setState({\n            priority: event.target.value\n        })\n    }    \n    handleDateChange = (event) => {\n        this.setState({\n            date: event.target.value\n        })\n    }\n    handleTimeChange = (event) => {\n        this.setState({\n            time: event.target.value\n        })\n    }\n    handleSetTask = (event) => {\n        const { index, dispatch } = this.props\n        const { title, body, priority, date, time } = this.state\n        const { done } = this.props.task\n\n        const dueDate = validateDate(date) && validateTime(time) ? \n            formatTime(date, time) :\n            undefined\n\n        const task = formatTask(title, body, dueDate, priority, done)\n    \n        dispatch(setTask(task, index))\n    }\n    setStateFromProps(props) {\n        const { title, body, priority, dueDate } = props.task\n        const { year, month, day, hour, minute } = formatDate(dueDate)\n\n        const bodyState = body === undefined ? '' : body\n        const dateState = dueDate === undefined ? '' : year + \"/\" + month + \"/\" + day\n        const timeState = dueDate === undefined ? '' : hour + \":\" + minute\n\n        this.setState({\n            title,\n            body: bodyState,\n            priority,\n            date: dateState,\n            time: timeState\n        })\n    }\n    componentDidMount() {\n        this.setStateFromProps(this.props)\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setStateFromProps(nextProps)   \n    }\n    render() {\n        const { title, body, priority, date, time } = this.state\n\n        return (\n            <TaskDetailContainer>\n                <TaskTitleInput \n                    type=\"text\" \n                    value={title} \n                    onChange={this.handleTitleChange} \n                />\n                <label>\n                    <LabelText>\n                        Note\n                    </LabelText>\n                    <TaskBodyInput \n                        type=\"text\"\n                        placeholder=\"Type your note\"\n                        onChange={this.handleBodyChange}\n                        value={body}\n                    />\n                </label>\n                <label>\n                    <LabelText>\n                        Priority\n                    </LabelText>\n                    <PrioritySelect \n                        onChange={this.handleSetPriority}\n                        value={priority}\n                    >\n                        <option value=\"high\">high</option>\n                        <option value=\"normal\">normal</option>\n                    </PrioritySelect>\n                </label>\n                \n                <label>\n                    <LabelText>\n                        Due Date\n                    </LabelText>\n                    <LabelText>\n                        Date\n                        <DueDateInput\n                            type=\"text\"\n                            placeholder=\"yyyy/mm/dd\"\n                            value={date}\n                            onChange={this.handleDateChange}\n                            maxLength='10'\n                        />\n                    </LabelText>\n\n                    <LabelText>\n                        Time\n                        <DueDateInput\n                            type=\"text\"\n                            placeholder=\"hh:mm\"\n                            value={time}\n                            onChange={this.handleTimeChange}\n                            maxLength='5'\n                        />\n                    </LabelText>\n                </label>\n\n                <input \n                    type='button' \n                    onClick={this.handleSetTask} \n                    value='Save' \n                />\n            </TaskDetailContainer>\n        )\n    }\n}\n\nconst mapStateToProps = ({ task }, props) => {\n    const { tasks } = task\n    const { index } = props\n\n    return {\n        task: tasks[index],\n        ...props\n    }\n}\n\nexport default connect(mapStateToProps)(TaskDetail)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { addTask } from '../store/actions'\nimport { formatTask } from '../utils/helpers';\n\nconst TaskInput = styled.input`\n    border-radius: 10px;\n    padding: 10px;\n    margin: 5px;\n`\n\nclass AddTask extends Component {\n    state = {\n        title: ''\n    }\n    handleTitleChange = (event) => {\n        this.setState({\n            title: event.target.value\n        })\n    }\n    handleAddBtn = () => {\n        const { dispatch } = this.props\n        const { title } = this.state\n        const task = formatTask(title, undefined, undefined, 'normal', false)\n\n        if (title !== '') {\n            dispatch(addTask(task))\n\n            this.setState({\n                title: '',\n                body: ''\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <TaskInput \n                    type=\"text\"\n                    value={this.state.title}\n                    placeholder=\"Add TODO here!\"\n                    onChange={this.handleTitleChange}\n                />\n                <i \n                    className=\"fas fa-arrow-circle-up fa-lg\"\n                    style={{margin: '5px'}}\n                    onClick={this.handleAddBtn}\n                />\n            </div>\n        )\n    }\n}\n\nexport default connect()(AddTask)","import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Task from './Task'\nimport TaskDetail from './TaskDetail'\nimport AddTask from './AddTask'\n\nconst TodoContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    \n`\n\nconst TodoList = styled.div`\n    border: 1px solid black;\n    border-radius: 5px;\n    margin: 10px;\n`\n\nconst Tasks = (props) => {\n    const { clickedIndex, tasks } = props\n\n    return (\n        <TodoContainer>\n            <div>\n                <TodoList>\n                    <h1\n                        style={{textAlign: 'center'}}\n                    >Todo List</h1>\n                    {tasks.map((task, i) => {\n                        return (\n                            <Task \n                                key={task.title + task.dueDate}\n                                index={i}\n                            /> \n                        )})\n                    }\n                    <AddTask />\n                </TodoList>\n            </div>\n            <div>\n                {\n                    tasks[clickedIndex] && (\n                        <TaskDetail\n                            index={clickedIndex}\n                        />\n                    )\n                }\n            </div>\n        </TodoContainer>\n    )\n}\n\nconst mapStateToProps = ({ task }, props) => {\n    const { authedUser, clickedIndex, tasks } = task\n\n    return {\n        authedUser,\n        clickedIndex,\n        tasks\n    }\n}\n\nexport default connect(mapStateToProps)(Tasks)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Tasks } from './comoponents'\nimport { handleInitalData } from './store/actions/shared';\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props\n\n    dispatch(handleInitalData())\n  }\n  render() {\n    return (\n      <div>\n        <Tasks />\n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n","import { TaskTypes } from '../constants'\n\nconst initState = {\n    authedUser: '',\n    clickedIndex: undefined,\n    tasks: []\n}\n\nexport default (state = initState, action) => {\n    switch(action.type) {\n        case TaskTypes.RECEIVE_TASK_DATA:\n            return {\n                ...state,\n                ...action.taskData\n            }\n        case TaskTypes.ADD_TASK:\n            console.log(state)\n            return {\n                ...state,\n                clickedIndex: 0,\n                tasks: [\n                    action.task,\n                    ...state.tasks, \n                ]\n            }\n        case TaskTypes.SET_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map((task, id) => {\n                    return id === action.id ? action.task : task\n                })\n            }\n        case TaskTypes.REMOVE_TASK:\n            return {\n                ...state,\n                clickedIndex: undefined,\n                tasks: state.tasks.filter((task, id) => {\n                    return id !== action.id\n                })\n            }\n        case TaskTypes.TOGGLE_TASK:\n            const { tasks } = state\n            const { id } = action\n            const task = tasks[id]\n            const nextDone = !task.done\n            const toggledTask = { ...task, done: nextDone }\n            const restTasks = state.tasks.filter((task, id) => {\n                return id !== action.id\n            })\n\n            if (nextDone) {\n                return {\n                    ...state,\n                    clickedIndex: tasks.length -1,\n                    tasks: [\n                        ...restTasks,\n                        toggledTask\n                    ]\n                }\n            } else {\n                return {\n                    ...state,\n                    clickedIndex: 0,\n                    tasks: [\n                        toggledTask,\n                        ...restTasks\n                    ]\n                }\n            }\n        case TaskTypes.CLICK_TASK:\n            return {\n                ...state,\n                clickedIndex: action.id\n            }            \n        case TaskTypes.SET_TASK_PRIORITY:\n            return {\n                ...state,\n                tasks: state.tasks.map((task, id) => {\n                    return id === action.id ? {\n                        ...task,\n                        priority: action.priority\n                    } : task\n                })\n            }\n        case TaskTypes.SET_TASK_DUE_DATE:\n            return {\n                ...state,\n                tasks: state.tasks.map((task, id) => {\n                    return id === action.id ? {\n                        ...task,\n                        dueDate: action.date\n                    } : task\n                })\n            }\n        default:\n            return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport task from './task'\n\nexport default combineReducers({\n    task\n})","import thunk from 'redux-thunk'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(thunk)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport reducer from './store/reducers'\nimport middleware from './store/middleware'\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));"],"sourceRoot":""}